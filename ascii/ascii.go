package ascii

import (
	"strings"
	"github.com/vynazevedo/termx/renderer"
	"github.com/vynazevedo/termx/theme"
)

type Art struct {
	content []string
	color   string
}

func New(art string) *Art {
	return &Art{
		content: strings.Split(art, "\n"),
		color:   theme.Current().Primary.Foreground,
	}
}

func (a *Art) WithColor(color string) *Art {
	a.color = color
	return a
}

func (a *Art) Render() {
	r := renderer.New()
	defer r.Close()
	
	for _, line := range a.content {
		r.WriteStyled(line, a.color)
		r.NewLine()
	}
}

func Box(title string, width, height int) *Art {
	art := make([]string, height)
	art[0] = "‚îå" + strings.Repeat("‚îÄ", width-2) + "‚îê"
	for i := 1; i < height-1; i++ {
		art[i] = "‚îÇ" + strings.Repeat(" ", width-2) + "‚îÇ"
	}
	art[height-1] = "‚îî" + strings.Repeat("‚îÄ", width-2) + "‚îò"
	
	if title != "" && len(title) < width-4 {
		art[0] = art[0][:2] + " " + title + " " + art[0][len(title)+4:]
	}
	
	return &Art{content: art}
}

const (
	KubernetesLogo = `    ‚éà
   ‚ï± ‚ï≤
  ‚ï±   ‚ï≤
 ‚îÇ  K8s ‚îÇ
  ‚ï≤   ‚ï±
   ‚ï≤ ‚ï±`

	DockerLogo = `   üê≥
  ‚ï±‚îÄ‚ï≤
 ‚îÇDOC‚îÇ
 ‚îÇKER‚îÇ
  ‚ï≤‚îÄ‚ï±`

	ServerRack = ` ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
 ‚îÇ ‚ñ™‚ñ™‚ñ™ ‚îÇ
 ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
 ‚îÇ ‚ñ™‚ñ™‚ñ™ ‚îÇ
 ‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§
 ‚îÇ ‚ñ™‚ñ™‚ñ™ ‚îÇ
 ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò`
)